name: "Production Deploy"

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: "eu-west-2"
  ECR_REPOSITORY: "arbitrage-bot"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: ConfigureAWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AmazonECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: docker build
        id: build-image
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: "latest"

        run: |
          export WWWUSER=${WWWUSER:-$UID}
          export WWWGROUP=${WWWGROUP:-$(id -g)}
          docker build --file ./docker/8.3/DockerfileProd --build-arg WWWGROUP=${WWWGROUP} --build-arg WWWUSER=${WWWUSER} --tag arbitrage-bot/app ./docker/8.3
          docker tag arbitrage-bot/app ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
